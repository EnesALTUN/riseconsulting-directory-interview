// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RiseConsulting.Directory.Data;

namespace RiseConsulting.Directory.Data.Migrations
{
    [DbContext(typeof(RiseConsultingDirectoryDbContext))]
    partial class RiseConsultingDirectoryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RiseConsulting.Directory.Entities.Models.CommunicationInformation", b =>
                {
                    b.Property<Guid>("CommunicationInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("DirectoryUsersId")
                        .HasMaxLength(255)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CommunicationInformationId");

                    b.HasIndex("DirectoryUsersId");

                    b.ToTable("CommunicationInformation");
                });

            modelBuilder.Entity("RiseConsulting.Directory.Entities.Models.Company", b =>
                {
                    b.Property<Guid>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CompanyId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("RiseConsulting.Directory.Entities.Models.DirectoryUsers", b =>
                {
                    b.Property<Guid>("DirectoryUsersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasMaxLength(255)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("UserId")
                        .HasMaxLength(255)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UsersUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DirectoryUsersId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("DirectoryUsers");
                });

            modelBuilder.Entity("RiseConsulting.Directory.Entities.Models.Users", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RiseConsulting.Directory.Entities.Models.CommunicationInformation", b =>
                {
                    b.HasOne("RiseConsulting.Directory.Entities.Models.DirectoryUsers", "DirectoryUsers")
                        .WithMany()
                        .HasForeignKey("DirectoryUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DirectoryUsers");
                });

            modelBuilder.Entity("RiseConsulting.Directory.Entities.Models.DirectoryUsers", b =>
                {
                    b.HasOne("RiseConsulting.Directory.Entities.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RiseConsulting.Directory.Entities.Models.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersUserId");

                    b.Navigation("Company");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
